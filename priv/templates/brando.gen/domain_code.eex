#
# <%= alias %>

mutation :create, <%= alias %>
mutation :update, <%= alias %>
mutation :delete, <%= alias %>

query :list, <%= alias %> do
  fn query -> from t in query<%= if soft_delete do %>, where: is_nil(t.deleted_at)<% end %> end
end

filters <%= alias %> do
  fn
    {:<%= main_field %>, <%= main_field %>}, query ->
      from q in query, where: ilike(q.<%= main_field %>, ^"%#{<%= main_field %>}%")
  end
end

query :single, <%= alias %>, do: fn query -> from t in query<%= if soft_delete do %>, where: is_nil(t.deleted_at)<% end %> end

matches <%= alias %> do
  fn
    {:id, id}, query ->
      from t in query, where: t.id == ^id

    {:<%= List.first(attrs) |> elem(0) %>, <%= List.first(attrs) |> elem(0) %>}, query ->
      from t in query, where: t.<%= List.first(attrs) |> elem(0) %> == ^<%= List.first(attrs) |> elem(0) %><%= if Keyword.get(attrs, :slug) do %>

    {:slug, slug}, query ->
      from t in query, where: t.slug == ^slug<% end %>
  end
end

